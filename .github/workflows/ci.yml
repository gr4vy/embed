name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  version:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    strategy:
      matrix:
        node-version:
          - 14.x

    outputs:
      output1: ${{ steps.step1.outputs.test }}
      package-version: ${{ steps.version.outputs.test }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Get Version
        id: get_version
        run: |
          yarn config set workspaces-experimental true
          yarn install --frozen-lockfile
          yarn bootstrap

      - name: Set version environment variable
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_ACCESS_TOKEN }}
        run: |
          echo test $(/home/runner/work/gr4vy-embed/gr4vy-embed/node_modules/.bin/auto shipit -dq)
          echo "::set-output name=test::$(/home/runner/work/gr4vy-embed/gr4vy-embed/node_modules/.bin/auto shipit -dq)"

      - name: Test
        id: step1
        run: |
          echo "::set-output name=test::hello"

  pickupversion:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    needs:
      - version

    steps:
      - run: |
          echo version: ${{ env.PACKAGE_VERSION }}
          echo variable here: $TEST_VAR
          echo output: ${{ needs.version.outputs.package-version }}
          echo output2: ${{ needs.package_version.outputs.package-version }}
          echo output1: ${{ needs.version.outputs.output1 }}

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Lint the content
        run: |
          yarn config set workspaces-experimental true
          yarn install --frozen-lockfile
          yarn bootstrap
          yarn build
          yarn lint
          yarn test

  cdn:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    needs:
      - test

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Install Node dependencies
        run: |
          yarn config set workspaces-experimental true
          yarn setup

      - name: Push compiled content
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: cdn
          FOLDER: packages/embed-cdn/lib
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') && github.repository_owner == 'gr4vy' && github.ref == 'refs/heads/main'"
    runs-on: ubuntu-latest

    needs:
      - test

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.DISPATCH_ACCESS_TOKEN }}

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn config set workspaces-experimental true
          yarn install --frozen-lockfile
          yarn bootstrap
          yarn build
          yarn release

  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    strategy:
      matrix:
        node-version:
          - 14.x

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          exit-code: 1
